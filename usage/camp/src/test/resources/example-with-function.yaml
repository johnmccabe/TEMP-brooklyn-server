name: example-with-function
description: |
  Tests a variety of simple functional expressions
origin: http://brooklyn.io
services:
- serviceType: brooklyn.entity.webapp.jboss.JBoss7Server
  brooklyn.config:
    # test the various ways to use literals, either a function
    literalValue1: '$brooklyn:literal("$brooklyn: is a fun place")' 
    literalValue2: "$brooklyn:literal(\"$brooklyn: is a fun place\")" 
    literalValue3: >
      $brooklyn:literal("$brooklyn: is a fun place")
    literalValue4: "$brooklyn:formatString(\"%s: is a fun place\", \"$brooklyn\")" 
    # function whose value is used as a key
    $brooklyn:literal("$brooklyn:1"): key to the city 

# TODO Maps, more...
    
# - serviceType: brooklyn.entity.webapp.jboss.JBoss7Server
#   brooklyn.config:
#     wars.root: http://search.maven.org/remotecontent?filepath=io/brooklyn/example/brooklyn-example-hello-world-webapp/0.5.0/brooklyn-example-hello-world-webapp-0.5.0.war
#     http.port: 9280+
#     <% Brooklyn.map("java.sysprops", map("db.prop", component("db").attributeWhenReady("database.url")) )%>:
#     java.sysprops: 
#       db.prop: <%= $Brooklyn.component("db").attributeWhenReady("database.url") %>
#     $brooklyn:map("java.sysprops", map("db.prop", component("db").attributeWhenReady("database.url")) ) %>:
#     java.sysprops: 
#       db.prop: $brooklyn:component("db").attributeWhenReady("database.url")
#     java.sysprops: 
#       $brooklyn:Maps.add:
#         $brooklyn:Maps.of("key", "value")
#       db.prop: $brooklyn:component("db").attributeWhenReady("database.url")
# - serviceType: brooklyn.entity.database.mysql.MySqlNode
#   id: db